
command('enable'):
  env:
    USE_DOCKER_SYNC:      = @('host.os') == 'darwin' and @('docker-sync') == 'yes' ? 'yes':'no'
    APP_BUILD:            = @('app.build')
    APP_MODE:             = @('app.mode')
    NAMESPACE:            = @('namespace')
    HAS_ASSETS:           = @('aws.bucket') !== null ? 'yes':'no'
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/enable.sh

command('disable'):
  env:
    USE_DOCKER_SYNC:      = (@('host.os') == 'darwin' and @('docker-sync') == 'yes') ? 'yes':'no'
    NAMESPACE:            = @('namespace')
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/disable.sh

command('destroy'):
  env:
    NAMESPACE:            = @('namespace')
    APP_BUILD:            = @('app.build')
    APP_VERSION:          = @('app.version')
    DOCKER_REPOSITORY:    = @('docker.repository')
    USE_DOCKER_SYNC:      = (@('host.os') == 'darwin' and @('docker-sync') == 'yes') ? 'yes':'no'
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    source .my127ws/harness/scripts/destroy.sh

command('exec %'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|=
    docker-compose exec -T -u node console ={ input.argument('%') }

command('console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u node console bash

command('db-console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec console bash -c 'mysql -h"$DB_HOST" -u"$DB_USER" -p"$DB_PASS" "$DB_NAME"'

command('assets download'):
  env:
    AWS_ID:  =@('aws.id')
    AWS_KEY: =@('aws.key')
  exec: |
    #!bash(workspace:/)|@
    passthru ws.aws s3 sync @('assets.remote') @('assets.local')

command('assets upload'):
  env:
    AWS_ID:  =@('aws.id')
    AWS_KEY: =@('aws.key')
  exec: |
    #!bash(workspace:/)|@
    passthru ws.aws s3 sync @('assets.local') @('assets.remote')

command('feature docker-sync (on|off)'):
  env:
    ATTR_KEY: 'docker-sync'
    ATTR_VAL: = input.command(3) == 'on' ? 'yes':'no'
  exec: |
    #!bash(workspace:/)|=
    ws set $ATTR_KEY $ATTR_VAL
    echo 'Updating docker-compose.yml'
    run ws install --step=prepare
    echo 'Bringing up the environment with the new setting'
    if [[ "$ATTR_VAL" = "yes" ]]; then
      passthru docker-sync start
    fi
    passthru ws enable
    if [[ "$ATTR_VAL" = "no" ]]; then
      passthru docker-sync stop
      passthru docker-sync clean
    fi
    echo 'Done'

command('frontend build'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u node console bash -i -c 'app build:frontend'

command('frontend watch'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u node console bash -i -c 'cd @('frontend.path'); @('frontend.watch')'

command('frontend console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u node console bash -i -c 'cd @('frontend.path'); bash'

command('port <service>'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|=
    passthru docker port $(docker-compose ps -q ={input.argument('service')})

command('set <attribute> <value>'):
  env:
    ATTR_KEY: = input.argument('attribute')
    ATTR_VAL: = input.argument('value')
  exec: |
    #!bash(workspace:/)|=
    if [ ! -f workspace.override.yml ]; then
      touch workspace.override.yml
    fi
    if grep -q "attribute('${ATTR_KEY}'):" workspace.override.yml; then
      echo "Removing old '${ATTR_KEY}' setting from workspace.override.yml"
      sed "/^attribute('${ATTR_KEY}'): .*$/d" workspace.override.yml > workspace.override.yml.tmp && mv workspace.override.yml.tmp workspace.override.yml
    fi
    if grep -q "attribute('${ATTR_KEY}'):" workspace.override.yml; then
      echo 'Could not remove line from workspace.override.yml, failing'
      exit 1
    fi
    echo "Setting '${ATTR_KEY}' setting to '${ATTR_VAL}' in workspace.override.yml"
    echo "attribute('${ATTR_KEY}'): ${ATTR_VAL}" >> workspace.override.yml
