command('app publish'): |
  #!bash(workspace:/)|@
  echo "@('docker.password')" | run docker login --username="@('docker.username')" --password-stdin @('docker.registry_url')
  passthru docker-compose push @('pipeline.publish.services')
  run docker logout @('docker.registry_url')

command('app deploy <environment>'):
  env:
    ENVIRONMENT: = input.argument('environment')
    NAMESPACE:   = @('pipeline.' ~ input.argument('environment') ~ '.namespace')
    CLUSTER:     = @('pipeline.' ~ input.argument('environment') ~ '.cluster.name')
    TIMEOUT:     = @('helm.timeout')
  exec: |
    #!bash(harness:/helm)|=
    set -o pipefail
    cd "${ENVIRONMENT}"
    doctl -t $DO_ACCESS_TOKEN kubernetes cluster kubeconfig show $CLUSTER > kubectl.config.yaml
    if helm version --short --client | grep '^Client: v2' >/dev/null 2>&1; then
      passthru helm init --client-only
    fi
    passthru helm dependency build
    passthru helm --kubeconfig=$PWD/kubectl.config.yaml upgrade --wait --install --timeout "${TIMEOUT}" --namespace "${NAMESPACE}" "${NAMESPACE}" ./

command('helm kubeval <chart-path>'):
  env:
    CHART_PATH: = input.argument('chart-path')
    NAMESPACE: = @('pipeline.' ~ input.argument('environment') ~ '.namespace')
  exec: |
    #!bash(harness:/helm)|=
    set -o pipefail
    cd "${CHART_PATH}"
    if helm version --short --client | grep '^Client: v2' >/dev/null 2>&1; then
      passthru helm init --client-only
    fi
    passthru helm dependency build
    passthru helm plugin install https://github.com/instrumenta/helm-kubeval || true
    passthru helm kubeval .
