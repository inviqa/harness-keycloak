{{ with .Values.services.postgres -}}
{{ if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.resourcePrefix }}postgres
  labels:
    app.service: {{ $.Values.resourcePrefix }}postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ $.Values.resourcePrefix }}postgres
  template:
    metadata:
      labels:
        app.service: {{ $.Values.resourcePrefix }}postgres
    spec:
      containers:
      - name: postgres
        enableServiceLinks: false
        env:
        {{ range $key, $value := .environment }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{ end }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        resources: {}
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: {{ $.Values.resourcePrefix }}postgres-persistent-storage
          mountPath: /var/lib/postgresql/data
      restartPolicy: Always
      volumes:
      - name: {{ $.Values.resourcePrefix }}postgres-persistent-storage
        persistentVolumeClaim:
          claimName: {{ $.Values.resourcePrefix }}postgres-pv-claim
status: {}
{{- end }}
{{- end }}